#!/bin/bash

module load singularity 2> /dev/null

# alignment
singularity exec -e docker://brainlife/fsl:5.0.9 ./alignment.sh

# reslice
singularity exec -e docker://brainlife/amico:1.0 ./reslice_fxn.py

# create brainmask
singularity exec -e docker://brainlife/fsl:5.0.9 ./brainmask.sh

if [ ! -s nodif.nii.gz ];
then
	echo "output missing"
	exit 1
fi

# rotate bvecs
singularity exec -e docker://brainlife/mcr:neurodebian1604-r2017a ./rotation/rotateBvecs

# create scheme file
num="1 2 3";

bvals=`jq -r '.bvals' config.json`;
bvecs=`jq -r '.bvecs' config.json`;

for NUM in $num
	do
		sed -n "${NUM}p" ${bvecs} > row_${NUM}.txt
		fmt -1 row_${NUM}.txt > col_${NUM}.txt
		fmt -1 ${bvals} > col_bvals.txt
	done
pr -m -t col_1.txt col_2.txt col_3.txt col_bvals.txt > bvals.scheme;
rm -rf *col* *row*;
cp -v nodif_brain_mask.nii.gz ./NODDI/;
cp -v bvals.scheme ./NODDI/;
cp -v dwi.nii.gz ./NODDI/dwi.nii.gz;

# NODDI via AMICO
dPar = `jq -r '.dpar' config.json`
singularity exec -e docker://brainlife/amico:1.0 ./NODDI.py

if [ ! -s ./NODDI/AMICO/NODDI/FIT_ICVF.nii.gz ];
then
	echo "output missing"
	exit 1
fi

# registration
singularity exec -e docker://brainlife/mcr:neurodebian1604-r2017a ./compiled/main

# clean up
noddiImages="FIT_ICVF_NEW.nii.gz FIT_ISOVF_NEW.nii.gz FIT_OD_NEW.nii.gz FIT_dir.nii.gz config.pickle";

for NODDIIMAGES in $noddiImages
	do
		mv ./NODDI/AMICO/NODDI/${NODDIIMAGES} ./
	done

rm -rf ./NODDI;
rm -rf *nodif*;
rm -rf ./kernels;

echo "{\"tags\": [\"${dPar}\" ]}" > product.json

echo "NODDI AMICO complete"

if [ ! -s FIT_ICVF_NEW.nii.gz ];
then
	echo "output missing"
	exit 1
fi
